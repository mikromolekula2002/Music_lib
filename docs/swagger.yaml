definitions:
  models.CreateSongReq:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
  models.SongTextResponse:
    properties:
      group:
        type: string
      song:
        type: string
      text:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a RESTful API for managing a music library.
  title: Music Library API
  version: "1.0"
paths:
  /create-song:
    post:
      consumes:
      - application/json
      description: Save group and song from the request and fetch additional text
        from an external API
      parameters:
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongReq'
      produces:
      - application/json
      responses:
        "201":
          description: Song successfully saved
          schema:
            $ref: '#/definitions/models.CreateSongReq'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Save song data
      tags:
      - sav song
  /song:
    delete:
      consumes:
      - application/json
      description: Deletes a song from the library based on the provided group and
        song name.
      parameters:
      - description: Group name
        in: query
        name: group
        required: true
        type: string
      - description: Song name
        in: query
        name: song
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Song deleted successfully
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: 'Bad Request: Missing required parameters'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 'Not Found: Song not found'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a song by group and song name
      tags:
      - delete song
    get:
      consumes:
      - application/json
      description: Fetches the lyrics of a song from a specific group with pagination.
      parameters:
      - description: Group name
        in: query
        name: group
        required: true
        type: string
      - description: Song name
        in: query
        name: song
        required: true
        type: string
      - default: 10
        description: Number of lines to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset from the beginning
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.SongTextResponse'
        "400":
          description: 'Bad Request: Invalid parameters'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 'Not Found: Song text not found'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get song text by group and song name
      tags:
      - song text
    put:
      consumes:
      - application/json
      description: Updates a song's details such as release date, text, and link.
      parameters:
      - description: Song data to update
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Song updated successfully
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing song
      tags:
      - update song
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of songs based on optional filters, with pagination
        support.
      parameters:
      - description: Filter by group name
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by link
        in: query
        name: link
        type: string
      - description: Filter by exact release date (YYYY-MM-DD)
        in: query
        name: releaseDate
        type: string
      - description: Filter by release date range start (YYYY-MM-DD)
        in: query
        name: startDate
        type: string
      - description: Filter by release date range end (YYYY-MM-DD)
        in: query
        name: endDate
        type: string
      - default: 10
        description: Number of results to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset from the beginning
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with list of songs
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: 'Bad Request: Invalid parameters'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 'Not Found: No songs found'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all songs with optional filters
      tags:
      - songs
swagger: "2.0"
